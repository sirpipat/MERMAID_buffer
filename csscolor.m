function c = csscolor(name, c1, c2)
% c = CSSCOLOR(name, color1, color2)
%
% Returns rgb color triplet given a CSS color name. See the list of color
% at https://matplotlib.org/stable/gallery/color/named_colors.html
%
% INPUT
% name      Name of defined CSS color e.g. 'red' or 'Lime'. If the color
%           name is not found, it will call RGBCOLOR(name).
%
%           Call CSSCOLOR('list') to see the list of colors. 
%           Call CSSCOLOR('find', COLOR1, COLOR2) to see the list of colors
%           closest to COLOR1 with a preference towards COLOR2
% color1    RGB triplet of the starting color for 'find' option
% color2    RGB triplet of the preference color for 'find' option
%           [default: color1]
%
% OUTPUT
% c         RGB triplet
%
% EXAMPLE
% % get a salmon color
% c = csscolor('salmon');
% x = 1:10;
% plot(x,x.^2,'Color',c)
%
% % print the list of defined color
% csscolor('list');
%
% % see what color that is close to salmon and a bit more red
% csscolor('find', csscolor('salmon'), [1 0 0]);
%
% SEE ALSO
% RGBCOLOR, X11COLOR
%
% Last modified by sirawich-at-prineton.edu: 04/11/2023

defval('name', 'list')

% loop through cell array
if iscell(name)
    c = nan(length(name), 3);
    for ii = 1:length(name)
        if ~strcmpi(name{ii}, 'list')
            try
                c(ii, :) = csscolor(name{ii});
            catch ME
                switch ME.identifier
                    case 'csscolor:datatype'
                        warning('[color #%d] Name must be a string or char cell', ii)
                    case 'rgbcolor:namenotfound'
                        warning('[color #%d] Color name not found. Try csscolor(''list'')', ii)
                    otherwise
                        rethrow(ME)
                end
                continue
            end
        end
    end
    return
end


% validate the input
if isstring(name)
    name = char(name);
end
if ~ischar(name)
    errorStruct.message = 'name must be a string or char cell';
    errorStruct.identifier = 'csscolor:datatype';
    error(errorStruct)
end

% remove any white space
name = replace(name, ' ', '');

color_cell = {'aliceblue', '#F0F8FF', ...
    'antiquewhite', '#FAEBD7', ...
    'aqua', '#00FFFF', ...
    'aquamarine', '#7FFFD4', ...
    'azure', '#F0FFFF', ...
    'beige', '#F5F5DC', ...
    'bisque', '#FFE4C4', ...
    'black', '#000000', ...
    'blanchedalmond', '#FFEBCD', ...
    'blue', '#0000FF', ...
    'blueviolet', '#8A2BE2', ...
    'brown', '#A52A2A', ...
    'burlywood', '#DEB887', ...
    'cadetblue', '#5F9EA0', ...
    'chartreuse', '#7FFF00', ...
    'chocolate', '#D2691E', ...
    'coral', '#FF7F50', ...
    'cornflowerblue', '#6495ED', ...
    'cornsilk', '#FFF8DC', ...
    'crimson', '#DC143C', ...
    'cyan', '#00FFFF', ...
    'darkblue', '#00008B', ...
    'darkcyan', '#008B8B', ...
    'darkgoldenrod', '#B8860B', ...
    'darkgray', '#A9A9A9', ...
    'darkgreen', '#006400', ...
    'darkgrey', '#A9A9A9', ...
    'darkkhaki', '#BDB76B', ...
    'darkmagenta', '#8B008B', ...
    'darkolivegreen', '#556B2F', ...
    'darkorange', '#FF8C00', ...
    'darkorchid', '#9932CC', ...
    'darkred', '#8B0000', ...
    'darksalmon', '#E9967A', ...
    'darkseagreen', '#8FBC8F', ...
    'darkslateblue', '#483D8B', ...
    'darkslategray', '#2F4F4F', ...
    'darkslategrey', '#2F4F4F', ...
    'darkturquoise', '#00CED1', ...
    'darkviolet', '#9400D3', ...
    'deeppink', '#FF1493', ...
    'deepskyblue', '#00BFFF', ...
    'dimgray', '#696969', ...
    'dimgrey', '#696969', ...
    'dodgerblue', '#1E90FF', ...
    'firebrick', '#B22222', ...
    'floralwhite', '#FFFAF0', ...
    'forestgreen', '#228B22', ...
    'fuchsia', '#FF00FF', ...
    'gainsboro', '#DCDCDC', ...
    'ghostwhite', '#F8F8FF', ...
    'gold', '#FFD700', ...
    'goldenrod', '#DAA520', ...
    'gray', '#808080', ...
    'green', '#008000', ...
    'greenyellow', '#ADFF2F', ...
    'grey', '#808080', ...
    'honeydew', '#F0FFF0', ...
    'hotpink', '#FF69B4', ...
    'indianred', '#CD5C5C', ...
    'indigo', '#4B0082', ...
    'ivory', '#FFFFF0', ...
    'khaki', '#F0E68C', ...
    'lavender', '#E6E6FA', ...
    'lavenderblush', '#FFF0F5', ...
    'lawngreen', '#7CFC00', ...
    'lemonchiffon', '#FFFACD', ...
    'lightblue', '#ADD8E6', ...
    'lightcoral', '#F08080', ...
    'lightcyan', '#E0FFFF', ...
    'lightgoldenrodyellow', '#FAFAD2', ...
    'lightgray', '#D3D3D3', ...
    'lightgreen', '#90EE90', ...
    'lightgrey', '#D3D3D3', ...
    'lightpink', '#FFB6C1', ...
    'lightsalmon', '#FFA07A', ...
    'lightseagreen', '#20B2AA', ...
    'lightskyblue', '#87CEFA', ...
    'lightslategray', '#778899', ...
    'lightslategrey', '#778899', ...
    'lightsteelblue', '#B0C4DE', ...
    'lightyellow', '#FFFFE0', ...
    'lime', '#00FF00', ...
    'limegreen', '#32CD32', ...
    'linen', '#FAF0E6', ...
    'magenta', '#FF00FF', ...
    'maroon', '#800000', ...
    'mediumaquamarine', '#66CDAA', ...
    'mediumblue', '#0000CD', ...
    'mediumorchid', '#BA55D3', ...
    'mediumpurple', '#9370DB', ...
    'mediumseagreen', '#3CB371', ...
    'mediumslateblue', '#7B68EE', ...
    'mediumspringgreen', '#00FA9A', ...
    'mediumturquoise', '#48D1CC', ...
    'mediumvioletred', '#C71585', ...
    'midnightblue', '#191970', ...
    'mintcream', '#F5FFFA', ...
    'mistyrose', '#FFE4E1', ...
    'moccasin', '#FFE4B5', ...
    'navajowhite', '#FFDEAD', ...
    'navy', '#000080', ...
    'oldlace', '#FDF5E6', ...
    'olive', '#808000', ...
    'olivedrab', '#6B8E23', ...
    'orange', '#FFA500', ...
    'orangered', '#FF4500', ...
    'orchid', '#DA70D6', ...
    'palegoldenrod', '#EEE8AA', ...
    'palegreen', '#98FB98', ...
    'paleturquoise', '#AFEEEE', ...
    'palevioletred', '#DB7093', ...
    'papayawhip', '#FFEFD5', ...
    'peachpuff', '#FFDAB9', ...
    'peru', '#CD853F', ...
    'pink', '#FFC0CB', ...
    'plum', '#DDA0DD', ...
    'powderblue', '#B0E0E6', ...
    'purple', '#800080', ...
    'rebeccapurple', '#663399', ...
    'red', '#FF0000', ...
    'rosybrown', '#BC8F8F', ...
    'royalblue', '#4169E1', ...
    'saddlebrown', '#8B4513', ...
    'salmon', '#FA8072', ...
    'sandybrown', '#F4A460', ...
    'seagreen', '#2E8B57', ...
    'seashell', '#FFF5EE', ...
    'sienna', '#A0522D', ...
    'silver', '#C0C0C0', ...
    'skyblue', '#87CEEB', ...
    'slateblue', '#6A5ACD', ...
    'slategray', '#708090', ...
    'slategrey', '#708090', ...
    'snow', '#FFFAFA', ...
    'springgreen', '#00FF7F', ...
    'steelblue', '#4682B4', ...
    'tan', '#D2B48C', ...
    'teal', '#008080', ...
    'thistle', '#D8BFD8', ...
    'tomato', '#FF6347', ...
    'turquoise', '#40E0D0', ...
    'violet', '#EE82EE', ...
    'wheat', '#F5DEB3', ...
    'white', '#FFFFFF', ...
    'whitesmoke', '#F5F5F5', ...
    'yellow', '#FFFF00', ...
    'yellowgreen', '#9ACD32'};

% generate the RGB triplets
colors = nan(length(color_cell) / 2, 3);
for ii = 2:2:length(color_cell)
    jj = ii / 2;
    colors(jj,:) = rgbcolor(color_cell{ii});
end

% length for listing colors
len = length(color_cell);
if strcmpi(name, 'find')
    defval('c2', c1)
    c2 = c1 + 0.8 * (c2 - c1);
    % distance from one color to another
    d = nan(1, length(colors));
    for ii = 1:size(colors, 1)
        c0 = colors(ii, :);
        d(ii) = norm(c0 - c1) + norm(c0 - c2);
    end
    % sort
    [~, ic] = sort(d);
    color_cell = color_cell(reshape((ic + [-0.5; 0]) * 2, [1 numel(ic)*2]));
    colors = colors(ic, :);
    name = 'list';
    len = 40;
    fprintf('Listing first %d colors\n', len/2);
end

if strcmpi(name, 'list')
    % print the listed colors
    fprintf('-----------------------------------------------------------\n');
    fprintf('          name          = [  R      G      B   ] , hexcode \n');
    fprintf('-----------------------------------------------------------\n');
    for ii = 1:2:len 
        jj = (ii+1) / 2;
        fprintf('%23s = [%.4f %.4f %.4f] , %s\n', ...
            cell2commasepstr(color_cell(ii)), ...          
            colors(jj, 1), ...
            colors(jj, 2), ...
            colors(jj, 3), ...
            color_cell{ii+1});
    end
    fprintf('-----------------------------------------------------------\n');
    fprintf(' see also: rgbcolor(''list''), x11color(''list'')\n');
    fprintf('-----------------------------------------------------------\n');
elseif any(strcmpi(name, {'random', 'any'}))
    idx = randi([1 length(color_cell)/2]);
    fprintf('COLOR = %s\n', upper(color_cell{2 * idx - 1}));
    c = color_cell{2 * idx - 1};
else
    % check the predefined colors
    for ii = 1:2:length(color_cell)
        if any(strcmpi(color_cell{ii}, name))
            c = rgbcolor(color_cell{ii+1});
            return
        end
    end
    % if the name is undefined, check the color in x11color.m
    fprintf('CALLING X11COLOR(''%s'') ...\n', name);
    c = x11color(name);
end
end